<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:WellsChat.Maui"
             xmlns:shared="clr-namespace:WellsChat.Shared;assembly=WellsChat.Shared"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             xmlns:sf="clr-namespace:Syncfusion.Maui.ListView;assembly=Syncfusion.Maui.ListView"
             x:Class="WellsChat.Maui.MainPage">
    <ContentPage.BindingContext>
        <local:ChatViewModel />
    </ContentPage.BindingContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <sf:SfListView Grid.Row="0" x:Name="MessagesList" ItemsSource="{Binding Messages}" Margin="20" >
            <sf:SfListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VerticalStackLayout Grid.Column="0">
                            <VerticalStackLayout.Triggers>
                                <DataTrigger TargetType="VerticalStackLayout" Binding="{Binding MessageType}" Value="{x:Static shared:MessageTypeEnum.Info}">
                                    <Setter Property="BackgroundColor" Value="{x:Null}" />
                                </DataTrigger>
                                <DataTrigger TargetType="VerticalStackLayout" Binding="{Binding MessageType}" Value="{x:Static shared:MessageTypeEnum.Connected}">
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightCyan}, Dark={StaticResource DarkCyan}}" />
                                </DataTrigger>
                                <DataTrigger TargetType="VerticalStackLayout" Binding="{Binding MessageType}" Value="{x:Static shared:MessageTypeEnum.Disconnected}">
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
                                </DataTrigger>
                                <DataTrigger TargetType="VerticalStackLayout" Binding="{Binding MessageType}" Value="{x:Static shared:MessageTypeEnum.Me}">
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGreen}, Dark={StaticResource DarkGreen}}" />
                                </DataTrigger>
                                <DataTrigger TargetType="VerticalStackLayout" Binding="{Binding MessageType}" Value="{x:Static shared:MessageTypeEnum.NotMe}">
                                    <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightBlue}, Dark={StaticResource DarkBlue}}" />
                                </DataTrigger>
                            </VerticalStackLayout.Triggers>
                            <Label Text="{Binding SenderDisplayName, StringFormat='{0}:'}" Margin="8,0" HorizontalOptions="End" FontAttributes="Bold"/>
                            <Label BindingContext="{x:Static sys:DateTime.Now}" Text="{Binding StringFormat='{0:g}'}" Margin="8,0" HorizontalOptions="End" FontSize="12"/>
                        </VerticalStackLayout>
                        <Label Grid.Column="1" Text="{Binding Payload}" ToolTipProperties.Text="Double-click to copy to clipboard" Margin="8,0" VerticalTextAlignment="Center" LineBreakMode="WordWrap">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="OnLabelTappedAsync" CommandParameter="{Binding Payload}" Buttons="Primary"
                                        NumberOfTapsRequired="2" />
                            </Label.GestureRecognizers>
                        </Label>
                    </Grid>
                </DataTemplate>
            </sf:SfListView.ItemTemplate>
        </sf:SfListView>
        <HorizontalStackLayout Grid.Row="1" Margin="20,0,0,0">
            <CheckBox x:Name="checkBox" />
            <Label Text="Multiline" VerticalTextAlignment="Center">
                <Label.Triggers>
                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkBox}, Path=IsChecked}" Value="true">
                        <Setter Property="FontAttributes" Value="Italic, Bold" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>
        </HorizontalStackLayout>

        <StackLayout Grid.Row="2" Orientation="Horizontal" HorizontalOptions="FillAndExpand" Margin="20,0,20,20">
            <Editor x:Name="MessageEditor" Placeholder="Enter your message" MinimumHeightRequest="120" AutoSize="TextChanges" HorizontalOptions="FillAndExpand" Margin="0,0,8,0">
                <Editor.Triggers>
                    <DataTrigger TargetType="Editor" Binding="{Binding Source={x:Reference checkBox}, Path=IsChecked}" Value="true">
                        <Setter Property="IsVisible" Value="True" />
                        <Setter Property="Text" Value="{Binding Source={x:Reference MessageEntry},Path=Text}" />
                    </DataTrigger>
                    <DataTrigger TargetType="Editor" Binding="{Binding Source={x:Reference checkBox}, Path=IsChecked}" Value="False">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Editor.Triggers>
            </Editor>
            <Entry x:Name="MessageEntry" Placeholder="Enter your message" HorizontalOptions="FillAndExpand" Margin="0,0,8,0">
                <Entry.Triggers>
                    <DataTrigger TargetType="Entry" Binding="{Binding Source={x:Reference checkBox}, Path=IsChecked}" Value="true">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                    <DataTrigger TargetType="Entry" Binding="{Binding Source={x:Reference checkBox}, Path=IsChecked}" Value="False">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>
            <Button Text=">" Clicked="SendButton_Clicked"/>
        </StackLayout>
    </Grid>
</ContentPage>
